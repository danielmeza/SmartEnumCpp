# SmartEnumCpp Testing

This directory contains tests for the SmartEnumCpp library using Google Test framework.

## Test Environments

The project supports multiple test environments:

### Native Testing

Run tests on your local machine without hardware or emulation:

```bash
pio test -e native
```

### ESP32 Hardware Testing

Run tests on a physical ESP32 device:

```bash
pio test -e esp32dev
```

### ESP32 QEMU Testing

Run tests using ESP32 emulation with QEMU (no hardware required):

```bash
pio test -e esp32-qemu
```

## Test Structure

- `test_main.cpp`: Main entry point that initializes Google Test
  - Handles both native and ESP32 environments
  - For ESP32, runs tests in a FreeRTOS task with proper memory allocation

- `test_SmartEnum.cpp`: Tests for SmartEnum functionality
  - Basic SmartEnum operations (lookup, equality, conversion)
  - Polymorphic SmartEnum behaviors
  - SmartFlagEnum operations and validations
  - SmartEnumSwitch fluent interface

## Debugging Tests

When using QEMU, you can debug tests by examining the console output. The tests will print detailed information about what's being tested and any failures encountered.

## Adding New Tests

To add new test files:

1. Create a new C++ file in the test/ directory with the prefix `test_`
2. Include the Google Test header and your library headers
3. Use the `TEST` macro to define test cases
4. The test runner will automatically discover and execute your tests

Example:
```cpp
#include <gtest/gtest.h>
#include "SmartEnumCpp/SmartEnum.hpp"

TEST(MyNewTest, TestCase) {
    // Your test code here
    EXPECT_TRUE(true);
}
```
